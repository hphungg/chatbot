services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chatbot-app
    restart: unless-stopped
    environment:
      # Database - External MongoDB Atlas
      DATABASE_URL: ${DATABASE_URL}
      
      # Better Auth
      BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET}
      BETTER_AUTH_URL: ${BETTER_AUTH_URL:-http://localhost:3000}
      
      # Google OAuth
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      
      # OpenAI
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      
      # Email (Optional)
      RESEND_API_KEY: ${RESEND_API_KEY:-}
      RESEND_FROM_EMAIL: ${RESEND_FROM_EMAIL:-}
      INVITE_EMAIL_FROM: ${INVITE_EMAIL_FROM:-}
      
      # Admin Seed
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin123}
      ADMIN_NAME: ${ADMIN_NAME:-Administrator}
      
      # App Config
      APP_URL: ${APP_URL:-http://localhost}
      NODE_ENV: production
    ports:
      - "3000:3000"
    networks:
      - chatbot-network
    volumes:
      - ./prisma:/app/prisma
    # command: sh -c "node server.js"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: chatbot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro

    depends_on:
      - app
    networks:
      - chatbot-network

networks:
  chatbot-network:
    driver: bridge
